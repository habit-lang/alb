___+__a_b_c_requires___b_c:
    (___+__a_c_b_if___a_b____c_b!0{t$cc, t$cd, t$ce}(g1, g2)) -> ___+__a_b_c_requires___b_c:assumption(g2)
___+__a_b_c_requires___a_c:
    (___+__a_c_b_if___a_b____c_b!0{t$cc, t$cd, t$ce}(g1, g2)) -> ___+__a_b_c_requires___a_c:assumption(g1)
__expr_a_requires___a_expr_a:
    (__expr_a_if___a_expr_a!0{t$cu}(g1)) -> __expr_a_requires___a_expr_a:assumption(g1)
[@ e$5j8y (Expr e$5j8y), :-: e$5j8y Const h$5j8z, @ h$5j8z (Expr e$5j8y), :-: e$5j95 Double e$5j8y, ExprFour (Expr e$5j95)] : Yes [$a:___+__a_c_b_if___a_b____c_b!0{Const, Expr (:+: Const (:+: Sum Product)), :+: Sum Product}(g$pa:__const_a{Expr (:+: Const (:+: Sum Product))}(), g$pb:assumption($c)), $b:_____+__a_b_a_b_if____+__a_b_____+__a!0{Const, :+: Sum Product}(g$ru:assumption(g$c0), g$rv:assumption(g$22)), $c:___+__a_c_b_if___a_b____c_b!0{Sum, Expr (:+: Const (:+: Sum Product)), Product}(g$sb:__sum_a{Expr (:+: Const (:+: Sum Product))}(), g$sc:__product_a{Expr (:+: Const (:+: Sum Product))}()), $d:_____+__a_b_a_b_if____+__a_b_____+__a!3{Double, Const, :+: Sum (:+: Product Double), t$20}[0:g$3t:in_a_a!2{Double, :+: Product Double, Sum}[0:g$68:in_a_a!3{Double, Sum}()](g$6t:in_a_a!2{Double, Double, Product}[0:g$92:in_a_a!3{Double, Product}()](g$9n:in_a_a!0{Double}(), g$9o:___+__a_b{Product, Double}(), g$9p:___+__a{Product}()), g$6u:___+__a_b{Sum, :+: Product Double}(), g$6v:___+__a{Sum}())](g$bw:in_a_a!3{Double, Const}(), g$bx:_____+__a_b_a_b_if____+__a_b_____+__a!3{Double, Sum, :+: Product Double, t$cy}[0:g$fl:in_a_a!2{Double, Double, Product}[0:g$i0:in_a_a!3{Double, Product}()](g$il:in_a_a!0{Double}(), g$im:___+__a_b{Product, Double}(), g$in:___+__a{Product}())](g$ku:in_a_a!3{Double, Sum}(), g$kv:_____+__a_b_a_b_if____+__a_b_____+__a!1{Product, Double}(g$oh:assumption(g$mr), g$oi:assumption(g$ms)), g$kw:assumption(g$dt), g$kx:assumption(g$du), g$ky:___+__a_b{Sum, t$cy}(), g$kz:assumption(g$du)), g$by:assumption(g$21), g$bz:assumption(g$22), g$c0:___+__a_b{Const, t$20}(), g$c1:assumption(g$22)), $e:exprfour_expr__+__const__+__sum__+__product_double!0{}()] (improved to [@ (:+: Const (:+: Sum Product)) (Expr (:+: Const (:+: Sum Product))), :-: (:+: Const (:+: Sum Product)) Const (:+: Sum Product), @ (:+: Sum Product) (Expr (:+: Const (:+: Sum Product))), :-: (:+: Const (:+: Sum (:+: Product Double))) Double (:+: Const (:+: Sum Product)), ExprFour (Expr (:+: Const (:+: Sum (:+: Product Double))))])
